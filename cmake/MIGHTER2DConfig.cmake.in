# This script provides the MIGHTER2D libraries as imported targets
# ===========================================================
#
# Usage
# -----
#
# Examples:
#   find_package(MIGHTER2D 2.0.0)
#   find_package(MIGHTER2D 2.0.0 REQUIRED)
#
# By default, the dynamic libraries of MIGHTER2D will be found. To find the static ones instead,
# you must set the MIGHTER2D_STATIC_LIBRARIES variable to TRUE before calling find_package(MIGHTER2D ...).
# example:
#   set(MIGHTER2D_STATIC_LIBRARIES TRUE)
#   find_package(MIGHTER2D 2.0.0 REQUIRED)
#
# If MIGHTER2D is not installed in a standard path, you can use the MIGHTER2D_DIR CMake variable
# to tell CMake where MIGHTER2D's config file is located (PREFIX/lib/cmake/MIGHTER2D for a library-based installation,
#
# Output
# ------
#
# This script defines the following variable:
# - MIGHTER2D_FOUND:        true if all the required modules are found
#
# And the following target:
#   - mighter2d
#
# The MIGHTER2D target is the same for both Debug and Release build configurations and will automatically provide
# correct settings based on your currently active build configuration. The MIGHTER2D target name also does not change
# when using dynamic or static MIGHTER2D libraries.
#
# example:
#   find_package(MIGHTER2D 1.0.0 REQUIRED)
#   add_executable(myapp ...)
#   target_link_libraries(myapp mighter2d)

set(FIND_MIGHTER2D_PATHS
    "${CMAKE_CURRENT_LIST_DIR}/../.."
    ${MIGHTER2D_ROOT}
    $ENV{MIGHTER2D_ROOT}
    ~/Library/Frameworks
    /Library/Frameworks
    /usr/local
    /usr
    /sw
    /opt/local
    /opt/csw
    /opt)

# Choose which target definitions must be imported
if (MIGHTER2D_STATIC_LIBRARIES)
    set(config_name "Static")
else()
    set(config_name "Shared")
endif()
set(targets_config_file "${CMAKE_CURRENT_LIST_DIR}/MIGHTER2D${config_name}Targets.cmake")

# Generate imported targets for MIGHTER2D
if (EXISTS "${targets_config_file}")
    # Set MIGHTER2D_FOUND to TRUE by default, may be overwritten by one of the includes below
    set(MIGHTER2D_FOUND TRUE)
    include("${targets_config_file}")
else()
    set(FIND_MIGHTER2D_ERROR "Requested MIGHTER2D configuration (${config_name}) was not found")
    set(MIGHTER2D_FOUND FALSE)
endif()

if (NOT MIGHTER2D_FOUND)
    if(MIGHTER2D_FIND_REQUIRED)
        # fatal error
        message(FATAL_ERROR "${FIND_MIGHTER2D_ERROR}")
    elseif(NOT MIGHTER2D_FIND_QUIETLY)
        # error but continue
        message(STATUS "${FIND_MIGHTER2D_ERROR}")
    endif()
endif()

if (MIGHTER2D_FOUND AND NOT MIGHTER2D_FIND_QUIETLY)
    message(STATUS "Found Mighter2d @Mighter2d_VERSION_MAJOR@.@Mighter2d_VERSION_MINOR@.@Mighter2d_VERSION_PATCH@ in ${CMAKE_CURRENT_LIST_DIR}")
endif()
